The minilanguage specification should include lexical and syntactical details:

Alphabet:
a. [A-Za-z]
b. [0-9]
c. Underscore ('_')

Lexic:
a.Special symbols, representing:
- operators: 
	+ - * ** / = < <= > >= == [ ] ! != && ||
- separators:
	{ } ( ) . , : ; <space> <newline> <indent>
- reserved words:
	read, write, int, double, string, array_list, if, else, for, while

b.identifiers
- a sequence of letters and  digits, such that the first character is a letter; the rules is:
	identifier ::= letter | letter{letter|digit|underscore}
	letter ::= "a" | "b" | ... | "z" | "A" | "B" | ... | "Z" 
	digit ::= "0" | non_zero_digit
	non_zero_digit ::= "1" | ... | "9"
	underscore ::= "_"

c.constants
1.integer - rule: doesn't allow things like -0, 00067 etc
        integer ::= "0" | ["+" | "-"] non_zero_digit{digit}

2.character
	character ::= ”letter” | ”digit”

3.string
	string ::= "{character}"

CONSTANT = integer | character | string 
